{
  "name": "xunn.at",
  "version": "1.0.0",
  "private": true,
  "description": "https://xunn.at",
  "homepage": "https://xunn.at",
  "repository": {
    "type": "git",
    "url": "https://github.com/Xunnamius/xunn.at",
    "lens": "next"
  },
  "license": "MIT",
  "author": "Xunnamius",
  "type": "commonjs",
  "scripts": {
    "__test-repeat-all": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true NODE_ENV=test npx jest --reporters=jest-silent-reporter || exit; done) && echo \"All tests passed! Congrats!\"",
    "__test-repeat-unit": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true NODE_ENV=test npx jest --reporters=jest-silent-reporter --testPathIgnorePatterns '/(integration|e2e).*?\\.test\\.tsx?' '/dist/' || exit; done) && echo \"All tests passed! Congrats!\"",
    "build": "npm run build-dist --",
    "build-changelog": "conventional-changelog --outfile CHANGELOG.md --config conventional.config.js --release-count 0 --skip-unstable && (if [ \"$CHANGELOG_SKIP_TITLE\" != 'true' ]; then { node -e 'console.log(require(\"./conventional.config.js\").changelogTitle)'; cat CHANGELOG.md; } > CHANGELOG.md.ignore && mv CHANGELOG.md.ignore CHANGELOG.md; fi) && remark -o --use reference-links --use gfm --use frontmatter CHANGELOG.md && prettier --write CHANGELOG.md",
    "build-dist": "if [ -r ./next.config.js ]; then next build; else NODE_ENV=production tsc --project tsconfig.types.json && NODE_ENV=production webpack --config-name lib && if [ -r ./src/cli.ts ]; then NODE_ENV=production webpack --config-name cli && chmod +x ./dist/cli.js; fi && NODE_ENV=esm babel src --extensions .ts --out-dir dist/esm --out-file-extension .mjs; fi",
    "build-docs": "if [ -r ./next.config.js ]; then typedoc --plugin typedoc-plugin-markdown --out docs --readme none lib src test types external-scripts --exclude '**/*.test.*' --exclude external-scripts/bin; else ENTRY=`node -e 'console.log((x => typeof x==\"string\"?x:x.default)(require(\"./package.json\").exports[\".\"]).replace(/\\.\\/dist\\/(.+)\\.[a-zA-Z0-9]+$/, \"./src/$1.ts\"))'` && echo 'Entry file:' \"$ENTRY\" && typedoc --plugin typedoc-plugin-markdown --out docs --readme none $ENTRY && find docs -name '*.md' -exec sed -i -e 's/Project: //g' {} + && sed -i -e 1,4d docs/README.md; fi && find docs -name '*.md' -exec sed -i -e 's/`__namedParameters`/`\\(destructured\\)`/g' {} + && find docs -name '*.md' -exec sed -i -E 's/`__namedParameters\\.([^`]+)`/`\\({ \\1 }\\)`/g' {} +",
    "build-externals": "NODE_ENV=external webpack --config-name externals",
    "build-stats": "NODE_ENV=production webpack --json > bundle-stats.ignore.json",
    "clean": "rm -rf dist coverage external-scripts/bin bundle-stats.ignore.json && git ls-files --exclude-standard --ignored --others --directory dist | xargs rm -rf {} +",
    "dev": "next -p `npx -q acquire-port`",
    "format": "sort-package-json && remark -o --use reference-links --use gfm --use frontmatter '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && prettier --write '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && if [ -z \"$ALLOW_DISABLED_LINKS\" ] && grep -qR --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; then echo '---\nWARNING: disabled links were found in the following files:'; grep -R --color=always --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; echo '(to ignore this error, run this command again with ALLOW_DISABLED_LINKS=1)'; exit 1; fi",
    "lint": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.lint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.lint.json src; Y=$?; remark --quiet --use gfm --use frontmatter --use lint-final-newline --use lint-no-auto-link-without-protocol --use lint-no-blockquote-without-marker --use lint-ordered-list-marker-style --use lint-hard-break-spaces --use lint-no-duplicate-definitions --use lint-no-heading-content-indent --use lint-no-inline-padding --use lint-no-undefined-references --use lint-no-unused-definitions --use validate-links '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}'; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))'",
    "prepare": "if [ -z \"$CI\" ] && ([ -z \"$NODE_ENV\" ] || [ \"$NODE_ENV\" = \"development\" ]); then npx --no husky install; else echo 'skipped installing husky git hooks'; fi",
    "start": "next start",
    "test": "npm run test-unit --",
    "test-all": "NODE_ENV=test jest $JEST_CLI --coverage",
    "test-e2e": "NODE_ENV=test jest $JEST_CLI '/e2e.*?\\.test\\.tsx?' --testPathIgnorePatterns '/dist/'",
    "test-integration": "NODE_ENV=test jest $JEST_CLI '/integration.*?\\.test\\.tsx?' --testPathIgnorePatterns '/dist/'",
    "test-integration-client": "NODE_ENV=test jest $JEST_CLI '/integration-client.*?\\.test\\.tsx?' --testPathIgnorePatterns '/dist/'",
    "test-integration-compile": "NODE_ENV=test jest $JEST_CLI '/integration-compile.*?\\.test\\.tsx?' --testPathIgnorePatterns '/dist/'",
    "test-integration-node": "NODE_ENV=test jest $JEST_CLI '/integration-node.*?\\.test\\.tsx?' --testPathIgnorePatterns '/dist/'",
    "test-repeat-all": "npm run __test-repeat-all --silent",
    "test-repeat-unit": "npm run __test-repeat-unit --silent",
    "test-unit": "NODE_ENV=test jest $JEST_CLI --coverage --testPathIgnorePatterns '/(integration|e2e).*?\\.test\\.tsx?' '/dist/'"
  },
  "config": {
    "mongodbMemoryServer": {
      "version": "5.0.9"
    }
  },
  "dependencies": {
    "@babel/core": "^7.18.9",
    "@babel/plugin-proposal-export-default-from": "^7.18.9",
    "@babel/plugin-proposal-function-bind": "^7.18.9",
    "@babel/plugin-transform-react-jsx-source": "^7.18.6",
    "@babel/preset-env": "^7.18.9",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.18.6",
    "@next/bundle-analyzer": "^12.2.3",
    "@octokit/rest": "^19.0.3",
    "@types/bytes": "^3.1.1",
    "@types/cors": "^2.8.12",
    "@types/debug": "^4.1.7",
    "@types/folder-hash": "^4.0.2",
    "@types/node": "^18.6.1",
    "@types/react": "^18.0.15",
    "@types/request-ip": "^0.0.37",
    "@xunnamius/next-types": "^1.0.9",
    "@xunnamius/types": "^1.3.0",
    "babel-plugin-explicit-exports-references": "^1.0.2",
    "babel-plugin-transform-default-named-imports": "^1.2.2",
    "bytes": "^3.1.2",
    "clone-deep": "^4.0.1",
    "cors": "^2.8.5",
    "find-up": "^5.0.0",
    "gunzip-maybe": "^1.4.2",
    "is-plain-object": "^5.0.0",
    "is-server-side": "^1.0.2",
    "isomorphic-json-fetch": "^1.0.15",
    "mongodb": "^4.8.1",
    "named-app-errors": "^4.0.0",
    "next": "^12.2.3",
    "node-fetch": "cjs",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-use": "^17.4.0",
    "request-ip": "^3.3.0",
    "swr": "^1.3.0",
    "tar-stream": "^2.2.0",
    "toss-expression": "^0.1.1",
    "typescript": "^4.7.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.18.9",
    "@babel/eslint-parser": "^7.18.9",
    "@commitlint/cli": "^17.0.3",
    "@commitlint/config-conventional": "^17.0.3",
    "@next/eslint-plugin-next": "^12.2.3",
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.3.0",
    "@types/clone-deep": "^4.0.1",
    "@types/confusing-browser-globals": "^1.0.0",
    "@types/content-type": "^1.1.5",
    "@types/fast-shuffle": "^4.5.0",
    "@types/jest": "^28.1.6",
    "@types/node-fetch": "^2.5.12",
    "@types/semver": "^7.3.10",
    "@types/tar-stream": "^2.2.2",
    "@types/test-listen": "^1.1.0",
    "@types/webpack": "^5.28.0",
    "@typescript-eslint/eslint-plugin": "^5.42.1",
    "@typescript-eslint/parser": "^5.31.0",
    "@xunnamius/conventional-changelog-projector": "^1.1.1",
    "@xunnamius/jest-types": "^1.1.3",
    "babel-jest": "^28.1.3",
    "babel-loader": "^8.2.5",
    "confusing-browser-globals": "^1.0.11",
    "content-type": "^1.0.4",
    "conventional-changelog-cli": "^2.2.2",
    "dot-prop": "^7.2.0",
    "dotenv": "^16.0.1",
    "eslint": "^8.20.0",
    "eslint-config-next": "^12.2.3",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^3.3.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.6.0",
    "eslint-plugin-jest-dom": "^4.0.2",
    "eslint-plugin-react": "^7.30.1",
    "execa": "^5.1.1",
    "fast-shuffle": "^4.5.1",
    "http-terminator": "^3.2.0",
    "husky": "^8.0.1",
    "jest": "^28.1.3",
    "jest-circus": "^28.1.3",
    "jest-environment-jsdom": "^28.1.3",
    "jest-extended": "^3.0.1",
    "jest-silent-reporter": "^0.5.0",
    "lint-staged": "^13.0.3",
    "mongodb-memory-server": "^8.8.0",
    "msw": "^0.44.2",
    "next-test-api-route-handler": "^3.1.7",
    "prettier": "^2.7.1",
    "random-case": "^1.0.0",
    "raw-body": "^2.5.1",
    "remark-cli": "^11.0.0",
    "remark-frontmatter": "^4.0.1",
    "remark-gfm": "^3.0.1",
    "remark-lint-final-newline": "^2.1.1",
    "remark-lint-hard-break-spaces": "^3.1.1",
    "remark-lint-no-auto-link-without-protocol": "^3.1.1",
    "remark-lint-no-blockquote-without-marker": "^5.1.1",
    "remark-lint-no-duplicate-definitions": "^3.1.1",
    "remark-lint-no-heading-content-indent": "^4.1.1",
    "remark-lint-no-inline-padding": "^4.1.1",
    "remark-lint-no-undefined-references": "^4.1.1",
    "remark-lint-no-unused-definitions": "^3.1.1",
    "remark-lint-ordered-list-marker-style": "^3.1.1",
    "remark-reference-links": "^6.0.1",
    "remark-validate-links": "^12.0.0",
    "semantic-release": "https://xunn.at/semantic-release-atam",
    "simple-git": "^3.10.0",
    "sort-package-json": "^1.57.0",
    "spellchecker": "^3.7.1",
    "test-listen": "^1.1.0",
    "text-extensions": "^2.4.0",
    "threads": "^1.7.0",
    "type-fest": "^2.17.0",
    "typedoc": "^0.23.9",
    "typedoc-plugin-markdown": "^3.13.4",
    "unfetch": "^4.2.0",
    "unique-filename": "^1.1.1",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0",
    "webpack-node-externals": "^3.0.0"
  },
  "engines": {
    "node": ">=16"
  }
}
